{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\PROJECTS-MERN\\\\PROJECT-MANAGEMENT-TOOL\\\\client\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [refresh, setRefresh] = useState(false); // Fetch projects when component mounts or refresh is triggered\n\n  useEffect(() => {\n    fetchProjects();\n  }, [refresh]); // Fetch projects from API\n\n  const fetchProjects = () => {\n    axios.get(\"http://localhost:9000/projects\").then(res => {\n      setProjects(res.data);\n      setRefresh(false); // Reset refresh state after fetching projects\n    }).catch(error => {\n      toast.error(\"Failed to fetch projects\");\n    });\n  }; // Handle project added event\n\n\n  const handleProjectAdded = useCallback(() => {\n    setRefresh(true); // Trigger refresh when a new project is added\n  }, []); // Handle project deleted event\n\n  const handleProjectDeleted = useCallback(() => {\n    setRefresh(true); // Trigger refresh when a project is deleted\n  }, []); // Set up event listeners for project events\n\n  useEffect(() => {\n    document.addEventListener(\"projectAdded\", handleProjectAdded);\n    document.addEventListener(\"projectDeleted\", handleProjectDeleted);\n    return () => {\n      document.removeEventListener(\"projectAdded\", handleProjectAdded);\n      document.removeEventListener(\"projectDeleted\", handleProjectDeleted);\n    };\n  }, [handleProjectAdded, handleProjectDeleted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow h-14 flex items-center justify-between px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex space-x-4\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `#${project.title}`,\n          className: \"text-gray-600 cursor-not-allowed\",\n          tabIndex: \"-1\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ml-auto flex items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bg-blue-500 text-white px-3 py-1 rounded-full\",\n        children: [projects.length, \" Projects\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"ON/BWaGWnqrgbrvHVwEvK4Hmw3Y=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","toast","Navbar","projects","setProjects","refresh","setRefresh","fetchProjects","get","then","res","data","catch","error","handleProjectAdded","handleProjectDeleted","document","addEventListener","removeEventListener","map","project","title","_id","length"],"sources":["E:/PROJECTS/PROJECTS-MERN/PROJECT-MANAGEMENT-TOOL/client/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst Navbar = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  // Fetch projects when component mounts or refresh is triggered\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, [refresh]);\r\n\r\n  // Fetch projects from API\r\n  const fetchProjects = () => {\r\n    axios\r\n      .get(\"http://localhost:9000/projects\")\r\n      .then((res) => {\r\n        setProjects(res.data);\r\n        setRefresh(false); // Reset refresh state after fetching projects\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Failed to fetch projects\");\r\n      });\r\n  };\r\n\r\n  // Handle project added event\r\n  const handleProjectAdded = useCallback(() => {\r\n    setRefresh(true); // Trigger refresh when a new project is added\r\n  }, []);\r\n\r\n  // Handle project deleted event\r\n  const handleProjectDeleted = useCallback(() => {\r\n    setRefresh(true); // Trigger refresh when a project is deleted\r\n  }, []);\r\n\r\n  // Set up event listeners for project events\r\n  useEffect(() => {\r\n    document.addEventListener(\"projectAdded\", handleProjectAdded);\r\n    document.addEventListener(\"projectDeleted\", handleProjectDeleted);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"projectAdded\", handleProjectAdded);\r\n      document.removeEventListener(\"projectDeleted\", handleProjectDeleted);\r\n    };\r\n  }, [handleProjectAdded, handleProjectDeleted]);\r\n\r\n  return (\r\n    <div className='bg-white shadow h-14 flex items-center justify-between px-4'>\r\n      <ul className='flex space-x-4'>\r\n        {projects.map((project) => (\r\n          <li key={project._id}>\r\n            <a\r\n              href={`#${project.title}`}\r\n              className='text-gray-600 cursor-not-allowed'\r\n              tabIndex='-1'\r\n            >\r\n              {project.title}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div className='ml-auto flex items-center'>\r\n        <span className='bg-blue-500 text-white px-3 py-1 rounded-full'>\r\n          {projects.length} Projects\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAFmB,CAInB;;EACAD,SAAS,CAAC,MAAM;IACdU,aAAa;EACd,CAFQ,EAEN,CAACF,OAAD,CAFM,CAAT,CALmB,CASnB;;EACA,MAAME,aAAa,GAAG,MAAM;IAC1BP,KAAK,CACFQ,GADH,CACO,gCADP,EAEGC,IAFH,CAESC,GAAD,IAAS;MACbN,WAAW,CAACM,GAAG,CAACC,IAAL,CAAX;MACAL,UAAU,CAAC,KAAD,CAAV,CAFa,CAEM;IACpB,CALH,EAMGM,KANH,CAMUC,KAAD,IAAW;MAChBZ,KAAK,CAACY,KAAN,CAAY,0BAAZ;IACD,CARH;EASD,CAVD,CAVmB,CAsBnB;;;EACA,MAAMC,kBAAkB,GAAGf,WAAW,CAAC,MAAM;IAC3CO,UAAU,CAAC,IAAD,CAAV,CAD2C,CACzB;EACnB,CAFqC,EAEnC,EAFmC,CAAtC,CAvBmB,CA2BnB;;EACA,MAAMS,oBAAoB,GAAGhB,WAAW,CAAC,MAAM;IAC7CO,UAAU,CAAC,IAAD,CAAV,CAD6C,CAC3B;EACnB,CAFuC,EAErC,EAFqC,CAAxC,CA5BmB,CAgCnB;;EACAT,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EAA0CH,kBAA1C;IACAE,QAAQ,CAACC,gBAAT,CAA0B,gBAA1B,EAA4CF,oBAA5C;IAEA,OAAO,MAAM;MACXC,QAAQ,CAACE,mBAAT,CAA6B,cAA7B,EAA6CJ,kBAA7C;MACAE,QAAQ,CAACE,mBAAT,CAA6B,gBAA7B,EAA+CH,oBAA/C;IACD,CAHD;EAID,CARQ,EAQN,CAACD,kBAAD,EAAqBC,oBAArB,CARM,CAAT;EAUA,oBACE;IAAK,SAAS,EAAC,6DAAf;IAAA,wBACE;MAAI,SAAS,EAAC,gBAAd;MAAA,UACGZ,QAAQ,CAACgB,GAAT,CAAcC,OAAD,iBACZ;QAAA,uBACE;UACE,IAAI,EAAG,IAAGA,OAAO,CAACC,KAAM,EAD1B;UAEE,SAAS,EAAC,kCAFZ;UAGE,QAAQ,EAAC,IAHX;UAAA,UAKGD,OAAO,CAACC;QALX;UAAA;UAAA;UAAA;QAAA;MADF,GAASD,OAAO,CAACE,GAAjB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAC,2BAAf;MAAA,uBACE;QAAM,SAAS,EAAC,+CAAhB;QAAA,WACGnB,QAAQ,CAACoB,MADZ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAjED;;GAAMrB,M;;KAAAA,M;AAmEN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}