{"ast":null,"code":"var _jsxFileName = \"E:\\\\ENCRPYTIX\\\\PROJECT-MANAGMENT-TOOL\\\\updation\\\\client\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchProjects(); // Listen for custom event 'projectAdded' to update projects\n\n    document.addEventListener(\"projectAdded\", handleProjectAdded);\n    return () => {\n      document.removeEventListener(\"projectAdded\", handleProjectAdded);\n    };\n  }, []);\n\n  const fetchProjects = () => {\n    axios.get(\"http://localhost:9000/projects\").then(res => {\n      setProjects(res.data);\n    }).catch(error => {\n      toast.error(\"Failed to fetch projects\");\n    });\n  };\n\n  const handleProjectAdded = () => {\n    fetchProjects(); // Refresh projects on new project added\n  };\n\n  const toggleProject = projectId => {\n    // Find project and toggle its state (active/inactive)\n    const updatedProjects = projects.map(project => project._id === projectId ? { ...project,\n      active: !project.active\n    } : project);\n    setProjects(updatedProjects);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow h-14 flex items-center px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex space-x-4\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `cursor-pointer ${project.active ? \"font-semibold text-blue-600\" : \"text-gray-600\"}`,\n        onClick: () => toggleProject(project._id),\n        children: project.title\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","axios","toast","Navbar","projects","setProjects","fetchProjects","document","addEventListener","handleProjectAdded","removeEventListener","get","then","res","data","catch","error","toggleProject","projectId","updatedProjects","map","project","_id","active","title"],"sources":["E:/ENCRPYTIX/PROJECT-MANAGMENT-TOOL/updation/client/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst Navbar = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n    // Listen for custom event 'projectAdded' to update projects\r\n    document.addEventListener(\"projectAdded\", handleProjectAdded);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"projectAdded\", handleProjectAdded);\r\n    };\r\n  }, []);\r\n\r\n  const fetchProjects = () => {\r\n    axios\r\n      .get(\"http://localhost:9000/projects\")\r\n      .then((res) => {\r\n        setProjects(res.data);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Failed to fetch projects\");\r\n      });\r\n  };\r\n\r\n  const handleProjectAdded = () => {\r\n    fetchProjects(); // Refresh projects on new project added\r\n  };\r\n\r\n  const toggleProject = (projectId) => {\r\n    // Find project and toggle its state (active/inactive)\r\n    const updatedProjects = projects.map((project) =>\r\n      project._id === projectId\r\n        ? { ...project, active: !project.active }\r\n        : project\r\n    );\r\n    setProjects(updatedProjects);\r\n  };\r\n\r\n  return (\r\n    <div className='bg-white shadow h-14 flex items-center px-4'>\r\n      <ul className='flex space-x-4'>\r\n        {projects.map((project) => (\r\n          <li\r\n            key={project._id}\r\n            className={`cursor-pointer ${\r\n              project.active ? \"font-semibold text-blue-600\" : \"text-gray-600\"\r\n            }`}\r\n            onClick={() => toggleProject(project._id)}\r\n          >\r\n            {project.title}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACdO,aAAa,GADC,CAEd;;IACAC,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EAA0CC,kBAA1C;IAEA,OAAO,MAAM;MACXF,QAAQ,CAACG,mBAAT,CAA6B,cAA7B,EAA6CD,kBAA7C;IACD,CAFD;EAGD,CARQ,EAQN,EARM,CAAT;;EAUA,MAAMH,aAAa,GAAG,MAAM;IAC1BL,KAAK,CACFU,GADH,CACO,gCADP,EAEGC,IAFH,CAESC,GAAD,IAAS;MACbR,WAAW,CAACQ,GAAG,CAACC,IAAL,CAAX;IACD,CAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;MAChBd,KAAK,CAACc,KAAN,CAAY,0BAAZ;IACD,CAPH;EAQD,CATD;;EAWA,MAAMP,kBAAkB,GAAG,MAAM;IAC/BH,aAAa,GADkB,CACd;EAClB,CAFD;;EAIA,MAAMW,aAAa,GAAIC,SAAD,IAAe;IACnC;IACA,MAAMC,eAAe,GAAGf,QAAQ,CAACgB,GAAT,CAAcC,OAAD,IACnCA,OAAO,CAACC,GAAR,KAAgBJ,SAAhB,GACI,EAAE,GAAGG,OAAL;MAAcE,MAAM,EAAE,CAACF,OAAO,CAACE;IAA/B,CADJ,GAEIF,OAHkB,CAAxB;IAKAhB,WAAW,CAACc,eAAD,CAAX;EACD,CARD;;EAUA,oBACE;IAAK,SAAS,EAAC,6CAAf;IAAA,uBACE;MAAI,SAAS,EAAC,gBAAd;MAAA,UACGf,QAAQ,CAACgB,GAAT,CAAcC,OAAD,iBACZ;QAEE,SAAS,EAAG,kBACVA,OAAO,CAACE,MAAR,GAAiB,6BAAjB,GAAiD,eAClD,EAJH;QAKE,OAAO,EAAE,MAAMN,aAAa,CAACI,OAAO,CAACC,GAAT,CAL9B;QAAA,UAOGD,OAAO,CAACG;MAPX,GACOH,OAAO,CAACC,GADf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvDD;;GAAMnB,M;;KAAAA,M;AAyDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}